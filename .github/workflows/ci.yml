name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        sdk-platform: '34'
        sdk-build-tools: '34.0.0'
        ndk-version: '26.1.10909125'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Build Android App
      run: |
        cd android
        ./gradlew assembleDebug
    
    - name: Run Android Tests
      run: |
        cd android
        ./gradlew test

  rust-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install cargo-ndk
      run: cargo install cargo-ndk
    
    - name: Set up Android NDK
      uses: android-actions/setup-android@v3
      with:
        ndk-version: '26.1.10909125'
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build Rust Library
      run: |
        cd rust
        chmod +x build_android.sh
        ./build_android.sh
    
    - name: Upload Rust Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rust-libraries
        path: android/app/src/main/jniLibs/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Scan
      uses: github/codeql-action/init@v3
      with:
        languages: java, kotlin
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  release:
    needs: [test, rust-build, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Rust Artifacts
      uses: actions/download-artifact@v4
      with:
        name: rust-libraries
        path: android/app/src/main/jniLibs/
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        sdk-platform: '34'
        sdk-build-tools: '34.0.0'
        ndk-version: '26.1.10909125'
    
    - name: Build Release APK
      run: |
        cd android
        ./gradlew assembleRelease
    
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: android/app/build/outputs/apk/release/
        retention-days: 90 